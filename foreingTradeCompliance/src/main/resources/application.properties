#Server configuration

server.port=80

# Manejo de Session 
#en Minutos
server.servlet.session.timeout=15m
# proteccion de la Cookie
#We can use the httpOnly and secure flags to secure our session cookie:
#httpOnly: if true then browser script won't be able to access the cookie
#secure: if true then the cookie will be sent only over HTTPS connection
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
# Ajustar src="http://cucoex.hopto.org/cucoexLogo" en causalChangedTemplate.html
#Schedule task
#        A Cron expression consists of six sequential fields -
#       second, minute, hour, day of month, month, day(s) of week
#       and is declared as follows
#       @Scheduled(cron = "* * * * * *")
#       syntax            means                example                explanation
#       ------------------------------------------------------------------------------------
#       *                 match any            "* * * * * *"          do always
#       */x               every x              "*/5 * * * * *"        do every five seconds
#       ?                 no specification     "0 0 0 25 12 ?"        do every Christmas Day

# EJEMPLOS
#       syntax                        means
#       ------------------------------------------------------------------------------------
#       "0 0 * * * *"                 the top of every hour of every day.
#       "*/10 * * * * *"              every ten seconds.
#       "0 0 8-10 * * *"              8, 9 and 10 o'clock of every day.
#       "0 0/30 8-10 * * *"           8:00, 8:30, 9:00, 9:30 and 10 o'clock every day.
#       "0 0 9-17 * * MON-FRI"        on the hour nine-to-five weekdays
#       "0 0 0 25 12 ?"               every Christmas Day at midnight

cron.expression.monitor=1 1 1 * * ? 
fixedDelay.in.milliseconds=1000
fixedRate.in.milliseconds=3000

#                                 Log
# logging level
logging.level.org.springframework=ERROR
logging.level.com.cucoex=INFO

# output to a file
logging.file=CuCoExApp.log

# temp folder example
#logging.file=${java.io.tmpdir}/app.log

logging.pattern.file=%d %p %c{1.} [%t] %m%n

logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n

#  Email server

# DiMeMex SMTP
spring.mail.host=mail.dimemex.site
spring.mail.port=26
spring.mail.username=cucoex@dimemex.site
spring.mail.password=cucoex2020
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=false

spring.task.execution.thread-name-prefix=NotificationThread-
spring.task.execution.pool.core-size=25
spring.task.execution.pool.max-size=50
spring.task.execution.pool.queue-capacity=100


# CuCoEx ArangoDB server
spring.arangodb.host=localhost
spring.arangodb.port= 8529
spring.arangodb.user=root
spring.arangodb.password=null
spring.arangodb.database=CuCoEx_ArangoDB


#CuCoEx seguridad
#spring.security.user.name=jeas
#spring.security.password=123456

# https://medium.com/@luiscualquiera/qué-son-los-actuators-de-spring-boot-55cecb48f746
#/health: Muestra información acerca de la salud de nuestra aplicación. Un simple \u201Cestado\u201D si estamos sin autenticar o información mucho más detallada si estamso autenticados en la aplicación.
#/info: Muestra información arbitraria de nuestra aplicación.
#/metrics: Muestra la información de métricas de nuestra aplicación.
#/trace: Muestra información de seguimiento (por defecto las últimas peticiones HTTP).

#enabled: si es true es accesible, en caso contrario, no.
#sensitive: si es true, necesitará que esté autorizado para mostrar información relevante acerca de HTTP.

#endpoints.health.sensitive=false
#management.security.enabled=false

#info.app.name=CuCoEx - SpringBoot application
#info.app.description=CuCOEx is a great web application to help companies to check foreing trade compliance at Mexico
#info.app.version=1.0.0


#Data source 
#Indica el driver/lib para conectar java a mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Url donde esta el servicio de tu mysql y el nombre de la base de datos
#spring.datasource.url=jdbc:mysql://localhost:3306/cucoex
spring.datasource.url=jdbc:mysql://localhost:3306/cucoex?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#Usuario y contrasena para tu base de datos descrita en la linea anterior
#spring.datasource.username=cucuexdb
#spring.datasource.password=cucoexdb2020
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.username=usuario_cucoex
#spring.datasource.password=cucoex2020

spring.datasource.auto-commit=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

#[Opcional]Imprime en tu consola las instrucciones hechas en tu base de datos.
spring.jpa.show-sql = false

#[Opcional]Crea las tablas.
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto = update

# Security
# security
jwt.secret = CuCoExSecret
jwt.expiration = 36000